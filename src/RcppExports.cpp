// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// runOTR
Rcpp::List runOTR(Rcpp::NumericMatrix Pts, Rcpp::NumericVector masses, unsigned int steps, std::size_t np, double tolerance);
RcppExport SEXP _reconstruction2D_runOTR(SEXP PtsSEXP, SEXP massesSEXP, SEXP stepsSEXP, SEXP npSEXP, SEXP toleranceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Pts(PtsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type masses(massesSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< std::size_t >::type np(npSEXP);
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    rcpp_result_gen = Rcpp::wrap(runOTR(Pts, masses, steps, np, tolerance));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_reconstruction2D_runOTR", (DL_FUNC) &_reconstruction2D_runOTR, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_reconstruction2D(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
